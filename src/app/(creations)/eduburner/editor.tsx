"use client"

import MonacoEditor from "@monaco-editor/react"
import { style } from "framer-motion/client"

const codeSnippet = `import React from 'react';

// Define the allowed icon names as a TypeScript union type
type IconProps = {
    name: 'upload' | 'store' | 'language' | 'resources';
    size?: number;
    fill?: string;
};

/**
 * Icon component renders an SVG icon based on the provided name.
 * @param {IconProps} props - The props for the Icon component.
 * @returns {JSX.Element | null} The SVG icon or null if name is invalid.
 */
export default function Icon({ name, size = 24, fill = 'currentColor' }: IconProps) {
    // Common SVG props for all icons
    const svgProps = {
        width: size,
        height: size,
        fill: fill,
        xmlns: "http://www.w3.org/2000/svg",
    };

    switch (name) {
        case 'language':
            return (
                <svg {...svgProps} viewBox="0 0 105 105">
                    <path
                        fillRule="evenodd"
                        clipRule="evenodd"
                        d="M21.36 63.84C21 61.13 21 57.95 21 54.26H21.01V46.73C21.01 43.05 21.01 39.86 21.37 37.15C21.91 33.09 23.29 30.08 25.69 27.68C28.1 25.28 31.11 23.91 35.16 23.36C37.87 23 41.05 23 44.74 23H61.27C64.96 23 68.14 23 70.85 23.36C74.91 23.91 77.92 25.28 80.32 27.68C82.72 30.08 84.09 33.09 84.64 37.15C84.9 39.14 84.97 41.39 84.99 43.91V43.99V44.05V46.73V54.26C84.99 57.95 84.99 61.13 84.63 63.84C84.09 67.9 82.71 70.91 80.31 73.31C77.9 75.71 74.89 77.08 70.84 77.63C69.4 77.82 67.58 77.92 66.34 77.96L60.36 83.94C58.4 85.91 55.78 86.99 53 86.99C50.22 86.99 47.61 85.91 45.64 83.94L39.65 77.96C38.43 77.92 36.59 77.82 35.15 77.63C31.09 77.08 28.08 75.71 25.68 73.31C23.28 70.91 21.9 67.9 21.36 63.84ZM69.77 31.29C67.6 31 64.66 31 61.26 31H52.99H43.71C40.75 31 38.18 31.03 36.22 31.29C33.34 31.68 32.14 32.54 31.34 33.34C30.54 34.14 29.68 35.34 29.29 38.22C29 40.41 29 43.34 29 46.74L29.01 46.73V54.26C29.01 57.66 29.01 60.6 29.3 62.78C29.69 65.66 30.55 66.86 31.35 67.66C32.15 68.45 33.35 69.32 36.23 69.71C37.51 69.88 39.53 69.97 41 70C42.76 70 43.85 70.85 44.76 71.76L51.29 78.29C52.22 79.22 53.78 79.22 54.71 78.29L61.24 71.76C62.15 70.85 63.24 70 65 70C66.47 69.97 68.49 69.88 69.78 69.71C72.66 69.32 73.86 68.46 74.66 67.66C75.46 66.86 76.32 65.66 76.71 62.78C77 60.59 77 57.66 77 54.26V48L76.87 40C76.83 39.36 76.77 38.77 76.7 38.22C76.31 35.34 75.45 34.14 74.65 33.34C73.85 32.55 72.65 31.68 69.77 31.29Z"
                    />
                </svg>
            );
        case 'resources':
            return (
                <svg {...svgProps} viewBox="0 0 105 105">
                    <path d="M20 49C20 51.21 21.79 53 24 53C26.21 53 28 51.21 28 49V33C28 30.79 29.79 29 32 29H44.34L49.99 34.65C51.48 36.14 53.54 37 55.65 37H71.99C74.2 37 75.99 38.79 75.99 41V53C75.99 63.41 75.99 68.64 73.97 71.67C73.09 72.99 71.97 74.1 70.66 74.98C69.28 75.9 67.47 76.41 64.6 76.7C62.4 76.92 60.79 78.87 61.01 81.07C61.21 83.14 62.95 84.68 64.99 84.68C65.12 84.68 65.25 84.68 65.39 84.66C69.6 84.25 72.6 83.31 75.11 81.63C77.3 80.17 79.16 78.31 80.63 76.11C84 71.07 84 65.03 84 53V41C84 34.38 78.62 29 72 29H55.66L50 23.34C48.49 21.83 46.48 21 44.34 21H32C25.38 21 20 26.38 20 33V49Z" />
                    <path d="M24 85H47C49.21 85 51 83.21 51 81C51 78.79 49.21 77 47 77H24C21.79 77 20 78.79 20 81C20 83.21 21.79 85 24 85Z" />
                    <path d="M24 69H39C41.21 69 43 67.21 43 65C43 62.79 41.21 61 39 61H24C21.79 61 20 62.79 20 65C20 67.21 21.79 69 24 69Z" />
                </svg>
            );
        case 'upload':
            return (
                <svg {...svgProps} viewBox="0 0 105 105">
                    <path d="M30.9971 23C28.7871 23 26.9971 24.79 26.9971 27C26.9971 29.21 28.7871 31 30.9971 31H72.9971C75.2071 31 76.9971 29.21 76.9971 27C76.9971 24.79 75.2071 23 72.9971 23H30.9971Z" />
                    <path d="M76.1469 61.0702C76.7369 63.2002 78.9369 64.4402 81.0769 63.8502C83.2069 63.2602 84.4469 61.0502 83.8569 58.9202C81.6969 51.1602 79.5869 46.0102 75.2369 42.6902C70.3969 38.9902 64.4369 38.9902 53.6169 38.9902H50.3869C39.5669 38.9902 33.6069 38.9902 28.7669 42.6902C24.4169 46.0202 22.3069 51.1602 20.1469 58.9202C19.5569 61.0502 20.7969 63.2502 22.9269 63.8502C23.2869 63.9502 23.6469 64.0002 24.0069 64.0002C25.7569 64.0002 27.3669 62.8402 27.8569 61.0702C29.8469 53.9302 31.3569 50.7802 33.6269 49.0502C36.2069 47.0802 40.3769 47.0002 50.3869 47.0002H53.6169C63.6269 47.0002 67.7969 47.0802 70.3769 49.0502C72.6469 50.7802 74.1569 53.9302 76.1469 61.0702Z" />
                    <path d="M51.9971 87C54.2071 87 55.9971 85.21 55.9971 83V66.66L61.1671 71.83C61.9471 72.61 62.9771 73 63.9971 73C65.0171 73 66.0471 72.61 66.8271 71.83C68.3871 70.27 68.3871 67.74 66.8271 66.17L59.9471 59.29C57.8271 57.17 54.9971 56 51.9971 56C48.9971 56 46.1671 57.17 44.0471 59.29L37.1671 66.17C35.6071 67.73 35.6071 70.26 37.1671 71.83C38.7271 73.39 41.2671 73.39 42.8271 71.83L47.9971 66.66V83C47.9971 85.21 49.7871 87 51.9971 87Z" />
                </svg>
            );
        case 'store':
            return (
                <svg {...svgProps} viewBox="0 0 105 105">
                    <path d="M65.9997 77.6497L61.9997 32.6497C61.9068 31.5888 61.3964 30.6083 60.5806 29.9238C59.7648 29.2392 58.7105 28.9068 57.6497 28.9997C56.5888 29.0925 55.6083 29.6029 54.9238 30.4187C54.2392 31.2345 53.9068 32.2888 53.9997 33.3497L57.9997 78.3497C58.0874 79.3487 58.5473 80.2784 59.2881 80.9544C60.029 81.6305 60.9967 82.0035 61.9997 81.9997C62.1195 82.0096 62.2399 82.0096 62.3597 81.9997C62.8848 81.9544 63.3959 81.8058 63.8634 81.5624C64.3309 81.319 64.7457 80.9856 65.084 80.5814C65.4223 80.1772 65.6773 79.7101 65.8344 79.2069C65.9916 78.7038 66.0477 78.1746 65.9997 77.6497Z" />
                    <path d="M84.9303 77.28L77.9303 39.28C77.8584 38.7433 77.6783 38.2269 77.4008 37.762C77.1234 37.297 76.7545 36.8932 76.3164 36.5751C75.8784 36.2569 75.3803 36.031 74.8523 35.911C74.3244 35.791 73.7775 35.7794 73.245 35.877C72.7124 35.9746 72.2052 36.1792 71.7541 36.4786C71.303 36.778 70.9173 37.1658 70.6205 37.6186C70.3237 38.0714 70.1219 38.5798 70.0273 39.1129C69.9327 39.6459 69.9474 40.1927 70.0703 40.72L77.0703 78.72C77.2387 79.6399 77.724 80.4717 78.442 81.0709C79.1599 81.6701 80.0652 81.9989 81.0003 82C81.2454 82.002 81.4901 81.9785 81.7303 81.93C82.7702 81.7356 83.6907 81.1372 84.2905 80.2657C84.8902 79.3942 85.1203 78.3207 84.9303 77.28Z" />
                    <path d="M31 82H37C39.6522 82 42.1957 80.9464 44.0711 79.0711C45.9464 77.1957 47 74.6522 47 72V32C47 29.3478 45.9464 26.8043 44.0711 24.9289C42.1957 23.0536 39.6522 22 37 22H31C28.3478 22 25.8043 23.0536 23.9289 24.9289C22.0536 26.8043 21 29.3478 21 32V72C21 74.6522 22.0536 77.1957 23.9289 79.0711C25.8043 80.9464 28.3478 82 31 82ZM29 32C29 31.4696 29.2107 30.9609 29.5858 30.5858C29.9609 30.2107 30.4696 30 31 30H37C37.5304 30 38.0391 30.2107 38.4142 30.5858C38.7893 30.9609 39 31.4696 39 32V72C39 72.5304 38.7893 73.0391 38.4142 73.4142C38.0391 73.7893 37.5304 74 37 74H31C30.4696 74 29.9609 73.7893 29.5858 73.4142C29.2107 73.0391 29 72.5304 29 72V32Z" />
                </svg>
            );
        default:
            // Return null if the icon name is not recognized
            return null;
    }
}
`

export default function CodeDisplay() {


    return (

        <MonacoEditor
            height="100%"
            width='100%'
            language="typescript"
            theme="vs-dark"
            value={codeSnippet}
            options={{
                readOnly: true,
                minimap: { enabled: false },
                scrollBeyondLastLine: false,
                fontSize: 14,
                lineNumbers: "on",
                roundedSelection: false,
                scrollbar: {
                    vertical: "visible",
                    horizontal: "visible",
                },
                overviewRulerLanes: 0,
                hideCursorInOverviewRuler: true,
                overviewRulerBorder: false,
                wordWrap: "on",
                automaticLayout: true,
            }}
            loading={
                <div style={{
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center',
                    height: '100%',
                    width: '100%',
                    backgroundColor: '#1E1E1E',
                }}
                >
                </div>
            }
        />

    )
}
